def T = UnitTests.registerT("float:", _, FloatTester.new, _);
def X_ = void(
	T("f32s", test_f32s),
	T("f32u", test_f32u),
	T("f64s", test_f64s),
	T("f64u", test_f64u),
	()
);

def tryPromoteS_F32 = Float.FLOAT32.tryPromoteS;
def tryPromoteU_F32 = Float.FLOAT32.tryPromoteU(0, _);
def tryPromoteS_F64 = Float.FLOAT64.tryPromoteS;
def tryPromoteU_F64 = Float.FLOAT64.tryPromoteU(0, _);

private class FloatTester(t: Tester) {
	def test_l_fn(i: long) {  // long -> float, expecting null
		var v = tryPromoteS_F32(i);
		if (v != null) {
			var got = Float32Val.!(v).bits;
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected null, got ", i);
			buf.putx(got);
			t.fail(buf.toString());
		}
	}
	def test_l_fv(i: long, expected: u32) { // long -> float, expecting value
		var v = tryPromoteS_F32(i);
		if (v == null) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got null");
			return t.fail(buf.toString());
		}
		var got = Float32Val.!(v).bits;
		if (expected != got) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got ");
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
	def test_u_fn(i: u64) {  // long -> float, expecting null
		var v = tryPromoteU_F32(i);
		if (v != null) {
			var got = Float32Val.!(v).bits;
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected null, got ", i);
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
	def test_u_fv(i: u64, expected: u32) { // long -> float, expecting value
		var v = tryPromoteU_F32(i);
		if (v == null) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got null");
			return t.fail(buf.toString());
		}
		var got = Float32Val.!(v).bits;
		if (expected != got) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got ");
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
	def test_l_dn(i: long) {  // long -> double, expecting null
		var v = tryPromoteS_F64(i);
		if (v != null) {
			var got = Float64Val.!(v).bits;
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected null, got ", i);
			buf.putd(got);
			return t.fail(buf.toString());
		}
	}
	def test_l_dv(i: long, expected: u64) { // long -> double, expecting value
		var v = tryPromoteS_F64(i);
		if (v == null) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got null");
			return t.fail(buf.toString());
		}
		var got = Float64Val.!(v).bits;
		if (expected != got) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got ");
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
	def test_u_dn(i: u64) {  // long -> double, expecting null
		var v = tryPromoteU_F64(i);
		if (v != null) {
			var got = Float64Val.!(v).bits;
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected null, got ", i);
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
	def test_u_dv(i: u64, expected: u64) { // long -> float, expecting value
		var v = tryPromoteU_F64(i);
		if (v == null) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got null");
			t.fail(buf.toString());
		}
		var got = Float64Val.!(v).bits;
		if (expected != got) {
			var buf = StringBuilder.new();
			buf.put1("cast(%d) expected f32:", i);
			buf.putx(expected);
			buf.puts(", got ");
			buf.putx(got);
			return t.fail(buf.toString());
		}
	}
}

def test_f32s(t: FloatTester) {
	def L = t.test_l_fv, N = t.test_l_fn;
	L(0, 0x0);
	L(1, 0x3f800000);
	L(2, 0x40000000);
	L(3, 0x40400000);
	L(4, 0x40800000);
	L(10, 0x41200000);
	L(11, 0x41300000);
	L(12, 0x41400000);
	L(13, 0x41500000);
	L(14, 0x41600000);
	L(30, 0x41f00000);
	L(31, 0x41f80000);
	L(32, 0x42000000);
	L(33, 0x42040000);
	L(34, 0x42080000);
	L(70, 0x428c0000);
	L(71, 0x428e0000);
	L(72, 0x42900000);
	L(73, 0x42920000);
	L(74, 0x42940000);
	L(150, 0x43160000);
	L(151, 0x43170000);
	L(152, 0x43180000);
	L(153, 0x43190000);
	L(154, 0x431a0000);
	L(310, 0x439b0000);
	L(311, 0x439b8000);
	L(312, 0x439c0000);
	L(313, 0x439c8000);
	L(314, 0x439d0000);
	L(630, 0x441d8000);
	L(631, 0x441dc000);
	L(632, 0x441e0000);
	L(633, 0x441e4000);
	L(634, 0x441e8000);
	L(1270, 0x449ec000);
	L(1271, 0x449ee000);
	L(1272, 0x449f0000);
	L(1273, 0x449f2000);
	L(1274, 0x449f4000);
	L(2550, 0x451f6000);
	L(2551, 0x451f7000);
	L(2552, 0x451f8000);
	L(2553, 0x451f9000);
	L(2554, 0x451fa000);
	L(5110, 0x459fb000);
	L(5111, 0x459fb800);
	L(5112, 0x459fc000);
	L(5113, 0x459fc800);
	L(5114, 0x459fd000);
	L(10230, 0x461fd800);
	L(10231, 0x461fdc00);
	L(10232, 0x461fe000);
	L(10233, 0x461fe400);
	L(10234, 0x461fe800);
	L(20470, 0x469fec00);
	L(20471, 0x469fee00);
	L(20472, 0x469ff000);
	L(20473, 0x469ff200);
	L(20474, 0x469ff400);
	L(40950, 0x471ff600);
	L(40951, 0x471ff700);
	L(40952, 0x471ff800);
	L(40953, 0x471ff900);
	L(40954, 0x471ffa00);
	L(81910, 0x479ffb00);
	L(81911, 0x479ffb80);
	L(81912, 0x479ffc00);
	L(81913, 0x479ffc80);
	L(81914, 0x479ffd00);
	L(163830, 0x481ffd80);
	L(163831, 0x481ffdc0);
	L(163832, 0x481ffe00);
	L(163833, 0x481ffe40);
	L(163834, 0x481ffe80);
	L(327670, 0x489ffec0);
	L(327671, 0x489ffee0);
	L(327672, 0x489fff00);
	L(327673, 0x489fff20);
	L(327674, 0x489fff40);
	L(655350, 0x491fff60);
	L(655351, 0x491fff70);
	L(655352, 0x491fff80);
	L(655353, 0x491fff90);
	L(655354, 0x491fffa0);
	L(1310710, 0x499fffb0);
	L(1310711, 0x499fffb8);
	L(1310712, 0x499fffc0);
	L(1310713, 0x499fffc8);
	L(1310714, 0x499fffd0);
	L(2621430, 0x4a1fffd8);
	L(2621431, 0x4a1fffdc);
	L(2621432, 0x4a1fffe0);
	L(2621433, 0x4a1fffe4);
	L(2621434, 0x4a1fffe8);
	L(5242870, 0x4a9fffec);
	L(5242871, 0x4a9fffee);
	L(5242872, 0x4a9ffff0);
	L(5242873, 0x4a9ffff2);
	L(5242874, 0x4a9ffff4);
	L(10485750, 0x4b1ffff6);
	L(10485751, 0x4b1ffff7);
	L(10485752, 0x4b1ffff8);
	L(10485753, 0x4b1ffff9);
	L(10485754, 0x4b1ffffa);
	L(20971510, 0x4b9ffffb);
	N(20971511);
	L(20971512, 0x4b9ffffc);
	N(20971513);
	L(20971514, 0x4b9ffffd);
	N(41943030);
	N(41943031);
	L(41943032, 0x4c1ffffe);
	N(41943033);
	N(41943034);
	N(83886070);
	N(83886071);
	L(83886072, 0x4c9fffff);
	N(83886073);
	N(83886074);
	N(167772150);
	N(167772151);
	N(335544310);
	N(335544311);
	N(671088630);
	N(671088631);
	N(671088632);
	N(1342177270);
	N(1342177271);
	N(2684354550);
	N(2684354554);
	N(5368709110);
	N(5368709114);
	N(10737418230);
	N(10737418234);
	N(21474836470);
	N(21474836474);
	N(42949672950);
	N(42949672954);
	N(85899345910);
	N(85899345914);
	N(171798691830);
	N(171798691834);
	N(343597383670);
	N(343597383674);
	N(687194767350);
	N(687194767354);
	N(1374389534710);
	N(1374389534714);
	N(2748779069430);
	N(2748779069434);
	N(5497558138870);
	N(5497558138874);
	N(10995116277750);
	N(10995116277754);
	N(21990232555510);
	N(21990232555514);
	N(43980465111030);
	N(43980465111034);
	N(87960930222070);
	N(87960930222074);
	N(175921860444150);
	N(175921860444154);
	N(351843720888310);
	N(351843720888314);
	N(703687441776630);
	N(703687441776634);
	N(1407374883553270);
	N(1407374883553274);
	N(2814749767106550);
	N(2814749767106554);
	N(5629499534213110);
	N(5629499534213114);
	N(11258999068426230);
	N(11258999068426234);
	N(22517998136852470);
	N(22517998136852474);
	N(45035996273704950);
	N(45035996273704954);
	N(90071992547409910);
	N(90071992547409914);
	N(180143985094819830);
	N(180143985094819834);
	N(360287970189639670);
	N(360287970189639674);
	N(720575940379279350);
	N(720575940379279354);
	N(1441151880758558710);
	N(1441151880758558714);
	N(2882303761517117430);
	N(2882303761517117434);
	N(5764607523034234870);
	N(5764607523034234874);
	N(-6917529027641081866);
	N(-6917529027641081862);
	N(4611686018427387894);
	N(4611686018427387898);
	N(9223372036854775798);
	N(9223372036854775802);

	L(-10, 0xc1200000);
	L(-9, 0xc1100000);
	L(-8, 0xc1000000);
	L(-7, 0xc0e00000);
	L(-6, 0xc0c00000);
	L(-1, 0xbf800000);
	L(-2, 0xc0000000);
	L(-3, 0xc0400000);
	L(-4, 0xc0800000);
	L(-10, 0xc1200000);
	L(-11, 0xc1300000);
	L(-12, 0xc1400000);
	L(-13, 0xc1500000);
	L(-14, 0xc1600000);
	L(-30, 0xc1f00000);
	L(-31, 0xc1f80000);
	L(-32, 0xc2000000);
	L(-33, 0xc2040000);
	L(-34, 0xc2080000);
	L(-70, 0xc28c0000);
	L(-71, 0xc28e0000);
	L(-72, 0xc2900000);
	L(-73, 0xc2920000);
	L(-74, 0xc2940000);
	L(-150, 0xc3160000);
	L(-151, 0xc3170000);
	L(-152, 0xc3180000);
	L(-153, 0xc3190000);
	L(-154, 0xc31a0000);
	L(-310, 0xc39b0000);
	L(-311, 0xc39b8000);
	L(-312, 0xc39c0000);
	L(-313, 0xc39c8000);
	L(-314, 0xc39d0000);
	L(-630, 0xc41d8000);
	L(-631, 0xc41dc000);
	L(-632, 0xc41e0000);
	L(-633, 0xc41e4000);
	L(-634, 0xc41e8000);
	L(-1270, 0xc49ec000);
	L(-1271, 0xc49ee000);
	L(-1272, 0xc49f0000);
	L(-1273, 0xc49f2000);
	L(-1274, 0xc49f4000);
	L(-2550, 0xc51f6000);
	L(-2551, 0xc51f7000);
	L(-2552, 0xc51f8000);
	L(-2553, 0xc51f9000);
	L(-2554, 0xc51fa000);
	L(-5110, 0xc59fb000);
	L(-5111, 0xc59fb800);
	L(-5112, 0xc59fc000);
	L(-5113, 0xc59fc800);
	L(-5114, 0xc59fd000);
	L(-10230, 0xc61fd800);
	L(-10231, 0xc61fdc00);
	L(-10232, 0xc61fe000);
	L(-10233, 0xc61fe400);
	L(-10234, 0xc61fe800);
	L(-20470, 0xc69fec00);
	L(-20471, 0xc69fee00);
	L(-20472, 0xc69ff000);
	L(-20473, 0xc69ff200);
	L(-20474, 0xc69ff400);
	L(-40950, 0xc71ff600);
	L(-40951, 0xc71ff700);
	L(-40952, 0xc71ff800);
	L(-40953, 0xc71ff900);
	L(-40954, 0xc71ffa00);
	L(-81910, 0xc79ffb00);
	L(-81911, 0xc79ffb80);
	L(-81912, 0xc79ffc00);
	L(-81913, 0xc79ffc80);
	L(-81914, 0xc79ffd00);
	L(-163830, 0xc81ffd80);
	L(-163831, 0xc81ffdc0);
	L(-163832, 0xc81ffe00);
	L(-163833, 0xc81ffe40);
	L(-163834, 0xc81ffe80);
	L(-327670, 0xc89ffec0);
	L(-327671, 0xc89ffee0);
	L(-327672, 0xc89fff00);
	L(-327673, 0xc89fff20);
	L(-327674, 0xc89fff40);
	L(-655350, 0xc91fff60);
	L(-655351, 0xc91fff70);
	L(-655352, 0xc91fff80);
	L(-655353, 0xc91fff90);
	L(-655354, 0xc91fffa0);
	L(-1310710, 0xc99fffb0);
	L(-1310711, 0xc99fffb8);
	L(-1310712, 0xc99fffc0);
	L(-1310713, 0xc99fffc8);
	L(-1310714, 0xc99fffd0);
	L(-2621430, 0xca1fffd8);
	L(-2621431, 0xca1fffdc);
	L(-2621432, 0xca1fffe0);
	L(-2621433, 0xca1fffe4);
	L(-2621434, 0xca1fffe8);
	L(-5242870, 0xca9fffec);
	L(-5242871, 0xca9fffee);
	L(-5242872, 0xca9ffff0);
	L(-5242873, 0xca9ffff2);
	L(-5242874, 0xca9ffff4);
	L(-10485750, 0xcb1ffff6);
	L(-10485751, 0xcb1ffff7);
	L(-10485752, 0xcb1ffff8);
	L(-10485753, 0xcb1ffff9);
	L(-10485754, 0xcb1ffffa);
	L(-20971510, 0xcb9ffffb);
	N(-20971511);
	L(-20971512, 0xcb9ffffc);
	N(-20971513);
	L(-20971514, 0xcb9ffffd);
	N(-41943030);
	N(-41943031);
	L(-41943032, 0xcc1ffffe);
	N(-41943033);
	N(-41943034);
	N(-83886070);
	N(-83886071);
	L(-83886072, 0xcc9fffff);
	N(-83886073);
	N(-83886074);
	N(-167772150);
	N(-167772154);
	N(-335544310);
	N(-335544314);
	N(-671088630);
	N(-671088634);
	N(-1342177270);
	N(-1342177274);
	N(-2684354550);
	N(-2684354554);
	N(-5368709110);
	N(-5368709114);
	N(-10737418230);
	N(-10737418234);
	N(-21474836470);
	N(-21474836474);
	N(-42949672950);
	N(-42949672954);
	N(-85899345910);
	N(-85899345914);
	N(-171798691830);
	N(-171798691834);
	N(-343597383670);
	N(-343597383674);
	N(-687194767350);
	N(-687194767354);
	N(-1374389534710);
	N(-1374389534714);
	N(-2748779069430);
	N(-2748779069434);
	N(-5497558138870);
	N(-5497558138874);
	N(-10995116277750);
	N(-10995116277754);
	N(-21990232555510);
	N(-21990232555514);
	N(-43980465111030);
	N(-43980465111034);
	N(-87960930222070);
	N(-87960930222074);
	N(-175921860444150);
	N(-175921860444154);
	N(-351843720888310);
	N(-351843720888314);
	N(-703687441776630);
	N(-703687441776634);
	N(-1407374883553270);
	N(-1407374883553274);
	N(-2814749767106550);
	N(-2814749767106554);
	N(-5629499534213110);
	N(-5629499534213114);
	N(-11258999068426230);
	N(-11258999068426234);
	N(-22517998136852470);
	N(-22517998136852474);
	N(-45035996273704950);
	N(-45035996273704954);
	N(-90071992547409910);
	N(-90071992547409914);
	N(-180143985094819830);
	N(-180143985094819834);
	N(-360287970189639670);
	N(-360287970189639674);
	N(-720575940379279350);
	N(-720575940379279354);
	N(-1441151880758558710);
	N(-1441151880758558714);
	N(-2882303761517117430);
	N(-2882303761517117434);
	N(-5764607523034234870);
	N(-5764607523034234874);
	N(6917529027641081866);
	N(6917529027641081862);
	N(-4611686018427387894);
	N(-4611686018427387898);
	N(-9223372036854775798);
	N(-9223372036854775802);

	L(-85893054464, 0xd19ffd00);
	L(-171788206080, 0xd21ffd80);
	L(-171789254656, 0xd21ffdc0);
	L(-171790303232, 0xd21ffe00);
	L(-171791351808, 0xd21ffe40);
	L(-171792400384, 0xd21ffe80);
	L(-343586897920, 0xd29ffec0);
	L(-343587946496, 0xd29ffee0);
	L(-343588995072, 0xd29fff00);
	L(-343590043648, 0xd29fff20);
	L(-343591092224, 0xd29fff40);
	L(-687184281600, 0xd31fff60);
	L(-687185330176, 0xd31fff70);
	L(-687186378752, 0xd31fff80);
	L(-687187427328, 0xd31fff90);
	L(-687188475904, 0xd31fffa0);
	L(-1374379048960, 0xd39fffb0);
	L(-1374380097536, 0xd39fffb8);
	L(-1374381146112, 0xd39fffc0);
	L(-1374382194688, 0xd39fffc8);
	L(-1374383243264, 0xd39fffd0);
	L(-2748768583680, 0xd41fffd8);
	L(-2748769632256, 0xd41fffdc);
	L(-2748770680832, 0xd41fffe0);
	L(-2748771729408, 0xd41fffe4);
	L(-2748772777984, 0xd41fffe8);
	L(-5497547653120, 0xd49fffec);
	L(-5497548701696, 0xd49fffee);
	L(-5497549750272, 0xd49ffff0);
	L(-5497550798848, 0xd49ffff2);
	L(-5497551847424, 0xd49ffff4);
	L(-10995105792000, 0xd51ffff6);
	L(-10995106840576, 0xd51ffff7);
	L(-10995107889152, 0xd51ffff8);
	L(-10995108937728, 0xd51ffff9);
	L(-10995109986304, 0xd51ffffa);
	L(-21990222069760, 0xd59ffffb);
	N(-21990223118336);
	L(-21990224166912, 0xd59ffffc);
	N(-21990225215488);
	L(-21990226264064, 0xd59ffffd);
	N(-43980454625280);
	N(-43980455673856);
	L(-43980456722432, 0xd61ffffe);

	L(-1441145283688792064, 0xdd9fffd0);
	L(-2882292766400839680, 0xde1fffd8);
	L(-2882293865912467456, 0xde1fffdc);
	L(-2882294965424095232, 0xde1fffe0);
	L(-2882296064935723008, 0xde1fffe4);
	L(-2882297164447350784, 0xde1fffe8);
	L(-5764596527917957120, 0xde9fffec);
	L(-5764597627429584896, 0xde9fffee);
	L(-5764598726941212672, 0xde9ffff0);
	L(-5764599826452840448, 0xde9ffff2);
	L(-5764600925964468224, 0xde9ffff4);
	L(6917540022757359616, 0x5ec00014);
	L(6917538923245731840, 0x5ec00012);
	L(6917537823734104064, 0x5ec00010);
	L(6917536724222476288, 0x5ec0000e);
	L(6917535624710848512, 0x5ec0000c);
	L(-4611675023311110144, 0xde7fffd8);
	L(-4611676122822737920, 0xde7fffdc);
	L(-4611677222334365696, 0xde7fffe0);
	L(-4611678321845993472, 0xde7fffe4);
	L(-4611679421357621248, 0xde7fffe8);
	L(-9223361041738498048, 0xdeffffec);
	L(-9223362141250125824, 0xdeffffee);
	L(-9223363240761753600, 0xdefffff0);
	L(-9223364340273381376, 0xdefffff2);
	L(-9223365439785009152, 0xdefffff4);
}

def test_f32u(t: FloatTester) {
	def U = t.test_u_fv, N = t.test_u_fn;

	U(0uL, 0x0);
	U(1uL, 0x3f800000);
	U(2uL, 0x40000000);
	U(3uL, 0x40400000);
	U(4uL, 0x40800000);
	U(10uL, 0x41200000);
	U(11uL, 0x41300000);
	U(12uL, 0x41400000);
	U(13uL, 0x41500000);
	U(14uL, 0x41600000);
	U(30uL, 0x41f00000);
	U(31uL, 0x41f80000);
	U(32uL, 0x42000000);
	U(33uL, 0x42040000);
	U(34uL, 0x42080000);
	U(70uL, 0x428c0000);
	U(71uL, 0x428e0000);
	U(72uL, 0x42900000);
	U(73uL, 0x42920000);
	U(74uL, 0x42940000);
	U(150uL, 0x43160000);
	U(151uL, 0x43170000);
	U(152uL, 0x43180000);
	U(153uL, 0x43190000);
	U(154uL, 0x431a0000);
	U(310uL, 0x439b0000);
	U(311uL, 0x439b8000);
	U(312uL, 0x439c0000);
	U(313uL, 0x439c8000);
	U(314uL, 0x439d0000);
	U(630uL, 0x441d8000);
	U(631uL, 0x441dc000);
	U(632uL, 0x441e0000);
	U(633uL, 0x441e4000);
	U(634uL, 0x441e8000);
	U(1270uL, 0x449ec000);
	U(1271uL, 0x449ee000);
	U(1272uL, 0x449f0000);
	U(1273uL, 0x449f2000);
	U(1274uL, 0x449f4000);
	U(2550uL, 0x451f6000);
	U(2551uL, 0x451f7000);
	U(2552uL, 0x451f8000);
	U(2553uL, 0x451f9000);
	U(2554uL, 0x451fa000);
	U(5110uL, 0x459fb000);
	U(5111uL, 0x459fb800);
	U(5112uL, 0x459fc000);
	U(5113uL, 0x459fc800);
	U(5114uL, 0x459fd000);
	U(10230uL, 0x461fd800);
	U(10231uL, 0x461fdc00);
	U(10232uL, 0x461fe000);
	U(10233uL, 0x461fe400);
	U(10234uL, 0x461fe800);
	U(20470uL, 0x469fec00);
	U(20471uL, 0x469fee00);
	U(20472uL, 0x469ff000);
	U(20473uL, 0x469ff200);
	U(20474uL, 0x469ff400);
	U(40950uL, 0x471ff600);
	U(40951uL, 0x471ff700);
	U(40952uL, 0x471ff800);
	U(40953uL, 0x471ff900);
	U(40954uL, 0x471ffa00);
	U(81910uL, 0x479ffb00);
	U(81911uL, 0x479ffb80);
	U(81912uL, 0x479ffc00);
	U(81913uL, 0x479ffc80);
	U(81914uL, 0x479ffd00);
	U(163830uL, 0x481ffd80);
	U(163831uL, 0x481ffdc0);
	U(163832uL, 0x481ffe00);
	U(163833uL, 0x481ffe40);
	U(163834uL, 0x481ffe80);
	U(327670uL, 0x489ffec0);
	U(327671uL, 0x489ffee0);
	U(327672uL, 0x489fff00);
	U(327673uL, 0x489fff20);
	U(327674uL, 0x489fff40);
	U(655350uL, 0x491fff60);
	U(655351uL, 0x491fff70);
	U(655352uL, 0x491fff80);
	U(655353uL, 0x491fff90);
	U(655354uL, 0x491fffa0);
	U(1310710uL, 0x499fffb0);
	U(1310711uL, 0x499fffb8);
	U(1310712uL, 0x499fffc0);
	U(1310713uL, 0x499fffc8);
	U(1310714uL, 0x499fffd0);
	U(2621430uL, 0x4a1fffd8);
	U(2621431uL, 0x4a1fffdc);
	U(2621432uL, 0x4a1fffe0);
	U(2621433uL, 0x4a1fffe4);
	U(2621434uL, 0x4a1fffe8);
	U(5242870uL, 0x4a9fffec);
	U(5242871uL, 0x4a9fffee);
	U(5242872uL, 0x4a9ffff0);
	U(5242873uL, 0x4a9ffff2);
	U(5242874uL, 0x4a9ffff4);
	U(10485750uL, 0x4b1ffff6);
	U(10485751uL, 0x4b1ffff7);
	U(10485752uL, 0x4b1ffff8);
	U(10485753uL, 0x4b1ffff9);
	U(10485754uL, 0x4b1ffffa);
	U(20971510uL, 0x4b9ffffb);
	N(20971511uL);
	U(20971512uL, 0x4b9ffffc);
	N(20971513uL);
	U(20971514uL, 0x4b9ffffd);
	N(41943030uL);
	N(41943031uL);
	U(41943032uL, 0x4c1ffffe);
	N(41943033uL);
	N(41943034uL);
	N(83886070uL);
	N(83886071uL);
	U(83886072uL, 0x4c9fffff);
	N(83886073uL);
	N(83886074uL);
	N(167772150uL);
	N(167772151uL);
	N(167772152uL);
	N(167772153uL);
	N(167772154uL);
	N(335544310uL);
	N(335544311uL);
	N(335544312uL);
	N(335544313uL);
	N(335544314uL);
	N(671088630uL);
	N(671088634uL);
	N(1342177270uL);
	N(1342177274uL);
	N(2684354550uL);
	N(2684354554uL);
	N(5368709110uL);
	N(5368709114uL);
	N(10737418230uL);
	N(10737418234uL);
	N(21474836470uL);
	N(21474836474uL);
	N(42949672950uL);
	N(42949672954uL);
	N(85899345910uL);
	N(85899345914uL);
	N(171798691830uL);
	N(171798691834uL);
	N(343597383670uL);
	N(343597383674uL);
	N(687194767350uL);
	N(687194767354uL);
	N(1374389534710uL);
	N(1374389534714uL);
	N(2748779069430uL);
	N(2748779069434uL);
	N(5497558138870uL);
	N(5497558138874uL);
	N(10995116277750uL);
	N(10995116277754uL);
	N(21990232555510uL);
	N(21990232555514uL);
	N(43980465111030uL);
	N(43980465111034uL);
	N(87960930222070uL);
	N(87960930222074uL);
	N(175921860444150uL);
	N(175921860444154uL);
	N(351843720888310uL);
	N(351843720888314uL);
	N(703687441776630uL);
	N(703687441776634uL);
	N(1407374883553270uL);
	N(1407374883553274uL);
	N(2814749767106550uL);
	N(2814749767106554uL);
	N(5629499534213110uL);
	N(5629499534213114uL);
	N(11258999068426230uL);
	N(11258999068426234uL);
	N(22517998136852470uL);
	N(22517998136852474uL);
	N(45035996273704950uL);
	N(45035996273704954uL);
	N(90071992547409910uL);
	N(90071992547409914uL);
	N(180143985094819830uL);
	N(180143985094819834uL);
	N(360287970189639670uL);
	N(360287970189639674uL);
	N(720575940379279350uL);
	N(720575940379279354uL);
	N(1441151880758558710uL);
	N(1441151880758558714uL);
	N(2882303761517117430uL);
	N(2882303761517117434uL);
	N(5764607523034234870uL);
	N(5764607523034234874uL);
	N(11529215046068469750uL);
	N(11529215046068469754uL);
	N(4611686018427387894uL);
	N(4611686018427387898uL);
	N(9223372036854775798uL);
	N(9223372036854775802uL);
	N(18446744073709551606uL);
	N(18446744073709551610uL);

	U(1073741824uL, 0x4e800000);
	U(2147483648uL, 0x4f000000);
	U(3221225472uL, 0x4f400000);
	U(4294967296uL, 0x4f800000);
	U(10737418240uL, 0x50200000);
	U(11811160064uL, 0x50300000);
	U(12884901888uL, 0x50400000);
	U(13958643712uL, 0x50500000);
	U(15032385536uL, 0x50600000);
	U(32212254720uL, 0x50f00000);
	U(33285996544uL, 0x50f80000);
	U(34359738368uL, 0x51000000);
	U(35433480192uL, 0x51040000);
	U(36507222016uL, 0x51080000);
	U(75161927680uL, 0x518c0000);
	U(76235669504uL, 0x518e0000);
	U(77309411328uL, 0x51900000);
	U(78383153152uL, 0x51920000);
	U(79456894976uL, 0x51940000);
	U(161061273600uL, 0x52160000);
	U(162135015424uL, 0x52170000);
	U(163208757248uL, 0x52180000);
	U(164282499072uL, 0x52190000);
	U(165356240896uL, 0x521a0000);
	U(332859965440uL, 0x529b0000);
	U(333933707264uL, 0x529b8000);
	U(335007449088uL, 0x529c0000);
	U(336081190912uL, 0x529c8000);
	U(337154932736uL, 0x529d0000);
	U(676457349120uL, 0x531d8000);
	U(677531090944uL, 0x531dc000);
	U(678604832768uL, 0x531e0000);
	U(679678574592uL, 0x531e4000);
	U(680752316416uL, 0x531e8000);
	U(1363652116480uL, 0x539ec000);
	U(1364725858304uL, 0x539ee000);
	U(1365799600128uL, 0x539f0000);
	U(1366873341952uL, 0x539f2000);
	U(1367947083776uL, 0x539f4000);
	U(2738041651200uL, 0x541f6000);
	U(2739115393024uL, 0x541f7000);
	U(2740189134848uL, 0x541f8000);
	U(2741262876672uL, 0x541f9000);
	U(2742336618496uL, 0x541fa000);
	U(5486820720640uL, 0x549fb000);
	U(5487894462464uL, 0x549fb800);
	U(5488968204288uL, 0x549fc000);
	U(5490041946112uL, 0x549fc800);
	U(5491115687936uL, 0x549fd000);
	U(10984378859520uL, 0x551fd800);
	U(10985452601344uL, 0x551fdc00);
	U(10986526343168uL, 0x551fe000);
	U(10987600084992uL, 0x551fe400);
	U(10988673826816uL, 0x551fe800);
	U(21979495137280uL, 0x559fec00);
	U(21980568879104uL, 0x559fee00);
	U(21981642620928uL, 0x559ff000);
	U(21982716362752uL, 0x559ff200);
	U(21983790104576uL, 0x559ff400);
	U(43969727692800uL, 0x561ff600);
	U(43970801434624uL, 0x561ff700);
	U(43971875176448uL, 0x561ff800);
	U(43972948918272uL, 0x561ff900);
	U(43974022660096uL, 0x561ffa00);
	U(87950192803840uL, 0x569ffb00);
	U(87951266545664uL, 0x569ffb80);
	U(87952340287488uL, 0x569ffc00);
	U(87953414029312uL, 0x569ffc80);
	U(87954487771136uL, 0x569ffd00);
	U(175911123025920uL, 0x571ffd80);
	U(175912196767744uL, 0x571ffdc0);
	U(175913270509568uL, 0x571ffe00);
	U(175914344251392uL, 0x571ffe40);
	U(175915417993216uL, 0x571ffe80);
	U(351832983470080uL, 0x579ffec0);
	U(351834057211904uL, 0x579ffee0);
	U(351835130953728uL, 0x579fff00);
	U(351836204695552uL, 0x579fff20);
	U(351837278437376uL, 0x579fff40);
	U(703676704358400uL, 0x581fff60);
	U(703677778100224uL, 0x581fff70);
	U(703678851842048uL, 0x581fff80);
	U(703679925583872uL, 0x581fff90);
	U(703680999325696uL, 0x581fffa0);
	U(1407364146135040uL, 0x589fffb0);
	U(1407365219876864uL, 0x589fffb8);
	U(1407366293618688uL, 0x589fffc0);
	U(1407367367360512uL, 0x589fffc8);
	U(1407368441102336uL, 0x589fffd0);
	U(2814739029688320uL, 0x591fffd8);
	U(2814740103430144uL, 0x591fffdc);
	U(2814741177171968uL, 0x591fffe0);
	U(2814742250913792uL, 0x591fffe4);
	U(2814743324655616uL, 0x591fffe8);
	U(5629488796794880uL, 0x599fffec);
	U(5629489870536704uL, 0x599fffee);
	U(5629490944278528uL, 0x599ffff0);
	U(5629492018020352uL, 0x599ffff2);
	U(5629493091762176uL, 0x599ffff4);
	U(11258988331008000uL, 0x5a1ffff6);
	U(11258989404749824uL, 0x5a1ffff7);
	U(11258990478491648uL, 0x5a1ffff8);
	U(11258991552233472uL, 0x5a1ffff9);
	U(11258992625975296uL, 0x5a1ffffa);
	U(22517987399434240uL, 0x5a9ffffb);
	N(22517988473176064uL);
	U(22517989546917888uL, 0x5a9ffffc);
	N(22517990620659712uL);
	U(22517991694401536uL, 0x5a9ffffd);
	N(45035985536286720uL);
	N(45035986610028544uL);
	U(45035987683770368uL, 0x5b1ffffe);
	N(45035988757512192uL);
	N(45035989831254016uL);
	N(90071981809991680uL);
	N(90071982883733504uL);
	U(90071983957475328uL, 0x5b9fffff);
	N(90071985031217152uL);

	U(18446733078593273856uL, 0x5f7ffff6);
	U(18446734178104901632uL, 0x5f7ffff7);
	U(18446735277616529408uL, 0x5f7ffff8);
	U(18446736377128157184uL, 0x5f7ffff9);
	U(18446737476639784960uL, 0x5f7ffffa);
	U(18446733078593273856uL, 0x5f7ffff6);
	U(18446734178104901632uL, 0x5f7ffff7);
}

def test_f64s(t: FloatTester) {
	def L = t.test_l_dv, N = t.test_l_dn;

	L(0, 0x0);
	L(-1, 0xbff0000000000000);
	L(-2, 0xc000000000000000);
	L(-6, 0xc018000000000000);
	L(-7, 0xc01c000000000000);
	L(-8, 0xc020000000000000);
	L(-18, 0xc032000000000000);
	L(-19, 0xc033000000000000);
	L(-20, 0xc034000000000000);
	L(-42, 0xc045000000000000);
	L(-43, 0xc045800000000000);
	L(-44, 0xc046000000000000);
	L(-90, 0xc056800000000000);
	L(-91, 0xc056c00000000000);
	L(-92, 0xc057000000000000);
	L(-186, 0xc067400000000000);
	L(-187, 0xc067600000000000);
	L(-188, 0xc067800000000000);
	L(-378, 0xc077a00000000000);
	L(-379, 0xc077b00000000000);
	L(-380, 0xc077c00000000000);
	L(-762, 0xc087d00000000000);
	L(-763, 0xc087d80000000000);
	L(-764, 0xc087e00000000000);
	L(-1530, 0xc097e80000000000);
	L(-1531, 0xc097ec0000000000);
	L(-1532, 0xc097f00000000000);
	L(-3066, 0xc0a7f40000000000);
	L(-3067, 0xc0a7f60000000000);
	L(-3068, 0xc0a7f80000000000);
	L(-6138, 0xc0b7fa0000000000);
	L(-6139, 0xc0b7fb0000000000);
	L(-6140, 0xc0b7fc0000000000);
	L(-12282, 0xc0c7fd0000000000);
	L(-12283, 0xc0c7fd8000000000);
	L(-12284, 0xc0c7fe0000000000);
	L(-24570, 0xc0d7fe8000000000);
	L(-24571, 0xc0d7fec000000000);
	L(-24572, 0xc0d7ff0000000000);
	L(-49146, 0xc0e7ff4000000000);
	L(-49147, 0xc0e7ff6000000000);
	L(-49148, 0xc0e7ff8000000000);
	L(-98298, 0xc0f7ffa000000000);
	L(-98299, 0xc0f7ffb000000000);
	L(-98300, 0xc0f7ffc000000000);
	L(-196602, 0xc107ffd000000000);
	L(-196603, 0xc107ffd800000000);
	L(-196604, 0xc107ffe000000000);
	L(-393210, 0xc117ffe800000000);
	L(-393211, 0xc117ffec00000000);
	L(-393212, 0xc117fff000000000);
	L(-786426, 0xc127fff400000000);
	L(-786427, 0xc127fff600000000);
	L(-786428, 0xc127fff800000000);
	L(-1572858, 0xc137fffa00000000);
	L(-1572859, 0xc137fffb00000000);
	L(-1572860, 0xc137fffc00000000);
	L(-3145722, 0xc147fffd00000000);
	L(-3145723, 0xc147fffd80000000);
	L(-3145724, 0xc147fffe00000000);
	L(-6291450, 0xc157fffe80000000);
	L(-6291451, 0xc157fffec0000000);
	L(-6291452, 0xc157ffff00000000);
	L(-12582906, 0xc167ffff40000000);
	L(-12582907, 0xc167ffff60000000);
	L(-12582908, 0xc167ffff80000000);
	L(-25165818, 0xc177ffffa0000000);
	L(-25165819, 0xc177ffffb0000000);
	L(-25165820, 0xc177ffffc0000000);
	L(-50331642, 0xc187ffffd0000000);
	L(-50331643, 0xc187ffffd8000000);
	L(-50331644, 0xc187ffffe0000000);
	L(-100663290, 0xc197ffffe8000000);
	L(-100663291, 0xc197ffffec000000);
	L(-100663292, 0xc197fffff0000000);
	L(-201326586, 0xc1a7fffff4000000);
	L(-201326587, 0xc1a7fffff6000000);
	L(-201326588, 0xc1a7fffff8000000);
	L(-402653178, 0xc1b7fffffa000000);
	L(-402653179, 0xc1b7fffffb000000);
	L(-402653180, 0xc1b7fffffc000000);
	L(-805306362, 0xc1c7fffffd000000);
	L(-805306363, 0xc1c7fffffd800000);
	L(-805306364, 0xc1c7fffffe000000);
	L(-1610612730, 0xc1d7fffffe800000);
	L(-1610612731, 0xc1d7fffffec00000);
	L(-1610612732, 0xc1d7ffffff000000);
	L(-3221225466, 0xc1e7ffffff400000);
	L(-3221225467, 0xc1e7ffffff600000);
	L(-3221225468, 0xc1e7ffffff800000);
	L(-6442450938, 0xc1f7ffffffa00000);
	L(-6442450939, 0xc1f7ffffffb00000);
	L(-6442450940, 0xc1f7ffffffc00000);
	L(-12884901882, 0xc207ffffffd00000);
	L(-12884901883, 0xc207ffffffd80000);
	L(-12884901884, 0xc207ffffffe00000);
	L(-25769803770, 0xc217ffffffe80000);
	L(-25769803771, 0xc217ffffffec0000);
	L(-25769803772, 0xc217fffffff00000);
	L(-51539607546, 0xc227fffffff40000);
	L(-51539607547, 0xc227fffffff60000);
	L(-51539607548, 0xc227fffffff80000);
	L(-103079215098, 0xc237fffffffa0000);
	L(-103079215099, 0xc237fffffffb0000);
	L(-103079215100, 0xc237fffffffc0000);
	L(-206158430202, 0xc247fffffffd0000);
	L(-206158430203, 0xc247fffffffd8000);
	L(-206158430204, 0xc247fffffffe0000);
	L(-412316860410, 0xc257fffffffe8000);
	L(-412316860411, 0xc257fffffffec000);
	L(-412316860412, 0xc257ffffffff0000);
	L(-824633720826, 0xc267ffffffff4000);
	L(-824633720827, 0xc267ffffffff6000);
	L(-824633720828, 0xc267ffffffff8000);
	L(-1649267441658, 0xc277ffffffffa000);
	L(-1649267441659, 0xc277ffffffffb000);
	L(-1649267441660, 0xc277ffffffffc000);
	L(-3298534883322, 0xc287ffffffffd000);
	L(-3298534883323, 0xc287ffffffffd800);
	L(-3298534883324, 0xc287ffffffffe000);
	L(-6597069766650, 0xc297ffffffffe800);
	L(-6597069766651, 0xc297ffffffffec00);
	L(-6597069766652, 0xc297fffffffff000);
	L(-13194139533306, 0xc2a7fffffffff400);
	L(-13194139533307, 0xc2a7fffffffff600);
	L(-13194139533308, 0xc2a7fffffffff800);
	L(-26388279066618, 0xc2b7fffffffffa00);
	L(-26388279066619, 0xc2b7fffffffffb00);
	L(-26388279066620, 0xc2b7fffffffffc00);
	L(-52776558133242, 0xc2c7fffffffffd00);
	L(-52776558133243, 0xc2c7fffffffffd80);
	L(-52776558133244, 0xc2c7fffffffffe00);
	L(-105553116266490, 0xc2d7fffffffffe80);
	L(-105553116266491, 0xc2d7fffffffffec0);
	L(-105553116266492, 0xc2d7ffffffffff00);
	L(-211106232532986, 0xc2e7ffffffffff40);
	L(-211106232532987, 0xc2e7ffffffffff60);
	L(-211106232532988, 0xc2e7ffffffffff80);
	L(-422212465065978, 0xc2f7ffffffffffa0);
	L(-422212465065979, 0xc2f7ffffffffffb0);
	L(-422212465065980, 0xc2f7ffffffffffc0);
	L(-844424930131962, 0xc307ffffffffffd0);
	L(-844424930131963, 0xc307ffffffffffd8);
	L(-844424930131964, 0xc307ffffffffffe0);
	L(-1688849860263930, 0xc317ffffffffffe8);
	L(-1688849860263931, 0xc317ffffffffffec);
	L(-1688849860263932, 0xc317fffffffffff0);
	L(-3377699720527866, 0xc327fffffffffff4);
	L(-3377699720527867, 0xc327fffffffffff6);
	L(-3377699720527868, 0xc327fffffffffff8);
	L(-6755399441055738, 0xc337fffffffffffa);
	L(-6755399441055739, 0xc337fffffffffffb);
	L(-6755399441055740, 0xc337fffffffffffc);
	L(-13510798882111482, 0xc347fffffffffffd);
	N(-13510798882111483);
	L(-13510798882111484, 0xc347fffffffffffe);
	N(-27021597764222970);
	N(-27021597764222971);
	L(-27021597764222972, 0xc357ffffffffffff);
	N(-54043195528445946);
	N(-54043195528445947);
	N(-54043195528445948);
	N(-108086391056891898);
	N(-108086391056891899);
	N(-108086391056891900);
	N(-216172782113783802);
	N(-216172782113783803);
	N(-216172782113783804);
	N(-432345564227567610);
	N(-432345564227567611);
	N(-432345564227567612);
	N(-864691128455135226);
	N(-864691128455135227);
	N(-864691128455135228);
	N(-1729382256910270458);
	N(-1729382256910270459);
	N(-1729382256910270460);
	N(-3458764513820540922);
	N(-3458764513820540923);
	N(-3458764513820540924);
	N(-6917529027641081850);
	N(-6917529027641081851);
	N(-6917529027641081852);
	N(4611686018427387910);
	N(4611686018427387909);
	N(4611686018427387908);
	N(-9223372036854775802);
	N(-9223372036854775803);
	N(-9223372036854775804);
	L(6, 0x4018000000000000);
	L(5, 0x4014000000000000);
	L(4, 0x4010000000000000);

	L(-108086391056886784, 0xc377fffffffffec0);
	L(-108086391056887808, 0xc377ffffffffff00);
	L(-216172782113777664, 0xc387ffffffffff40);
	L(-216172782113778688, 0xc387ffffffffff60);
	L(-216172782113779712, 0xc387ffffffffff80);
	L(-432345564227561472, 0xc397ffffffffffa0);
	L(-432345564227562496, 0xc397ffffffffffb0);
	L(-432345564227563520, 0xc397ffffffffffc0);
	L(-864691128455129088, 0xc3a7ffffffffffd0);
	L(-864691128455130112, 0xc3a7ffffffffffd8);
	L(-864691128455131136, 0xc3a7ffffffffffe0);
	L(-1729382256910264320, 0xc3b7ffffffffffe8);
	L(-1729382256910265344, 0xc3b7ffffffffffec);
	L(-1729382256910266368, 0xc3b7fffffffffff0);
	L(-3458764513820534784, 0xc3c7fffffffffff4);
	L(-3458764513820535808, 0xc3c7fffffffffff6);
	L(-3458764513820536832, 0xc3c7fffffffffff8);
	L(-6917529027641075712, 0xc3d7fffffffffffa);
	L(-6917529027641076736, 0xc3d7fffffffffffb);
	L(-6917529027641077760, 0xc3d7fffffffffffc);
	L(4611686018427394048, 0x43d0000000000006);
	L(4611686018427393024, 0x43d0000000000005);
	L(4611686018427392000, 0x43d0000000000004);
	L(-9223372036854769664, 0xc3dffffffffffffa);
	L(-9223372036854770688, 0xc3dffffffffffffb);
	L(-9223372036854771712, 0xc3dffffffffffffc);
}

def test_f64u(t: FloatTester) {
	def U = t.test_u_dv, N = t.test_u_dn;

	U(0uL, 0x0);
	U(1uL, 0x3ff0000000000000);
	U(2uL, 0x4000000000000000);
	U(6uL, 0x4018000000000000);
	U(7uL, 0x401c000000000000);
	U(8uL, 0x4020000000000000);
	U(18uL, 0x4032000000000000);
	U(19uL, 0x4033000000000000);
	U(20uL, 0x4034000000000000);
	U(42uL, 0x4045000000000000);
	U(43uL, 0x4045800000000000);
	U(44uL, 0x4046000000000000);
	U(90uL, 0x4056800000000000);
	U(91uL, 0x4056c00000000000);
	U(92uL, 0x4057000000000000);
	U(186uL, 0x4067400000000000);
	U(187uL, 0x4067600000000000);
	U(188uL, 0x4067800000000000);
	U(378uL, 0x4077a00000000000);
	U(379uL, 0x4077b00000000000);
	U(380uL, 0x4077c00000000000);
	U(762uL, 0x4087d00000000000);
	U(763uL, 0x4087d80000000000);
	U(764uL, 0x4087e00000000000);
	U(1530uL, 0x4097e80000000000);
	U(1531uL, 0x4097ec0000000000);
	U(1532uL, 0x4097f00000000000);
	U(3066uL, 0x40a7f40000000000);
	U(3067uL, 0x40a7f60000000000);
	U(3068uL, 0x40a7f80000000000);
	U(6138uL, 0x40b7fa0000000000);
	U(6139uL, 0x40b7fb0000000000);
	U(6140uL, 0x40b7fc0000000000);
	U(12282uL, 0x40c7fd0000000000);
	U(12283uL, 0x40c7fd8000000000);
	U(12284uL, 0x40c7fe0000000000);
	U(24570uL, 0x40d7fe8000000000);
	U(24571uL, 0x40d7fec000000000);
	U(24572uL, 0x40d7ff0000000000);
	U(49146uL, 0x40e7ff4000000000);
	U(49147uL, 0x40e7ff6000000000);
	U(49148uL, 0x40e7ff8000000000);
	U(98298uL, 0x40f7ffa000000000);
	U(98299uL, 0x40f7ffb000000000);
	U(98300uL, 0x40f7ffc000000000);
	U(196602uL, 0x4107ffd000000000);
	U(196603uL, 0x4107ffd800000000);
	U(196604uL, 0x4107ffe000000000);
	U(393210uL, 0x4117ffe800000000);
	U(393211uL, 0x4117ffec00000000);
	U(393212uL, 0x4117fff000000000);
	U(786426uL, 0x4127fff400000000);
	U(786427uL, 0x4127fff600000000);
	U(786428uL, 0x4127fff800000000);
	U(1572858uL, 0x4137fffa00000000);
	U(1572859uL, 0x4137fffb00000000);
	U(1572860uL, 0x4137fffc00000000);
	U(3145722uL, 0x4147fffd00000000);
	U(3145723uL, 0x4147fffd80000000);
	U(3145724uL, 0x4147fffe00000000);
	U(6291450uL, 0x4157fffe80000000);
	U(6291451uL, 0x4157fffec0000000);
	U(6291452uL, 0x4157ffff00000000);
	U(12582906uL, 0x4167ffff40000000);
	U(12582907uL, 0x4167ffff60000000);
	U(12582908uL, 0x4167ffff80000000);
	U(25165818uL, 0x4177ffffa0000000);
	U(25165819uL, 0x4177ffffb0000000);
	U(25165820uL, 0x4177ffffc0000000);
	U(50331642uL, 0x4187ffffd0000000);
	U(50331643uL, 0x4187ffffd8000000);
	U(50331644uL, 0x4187ffffe0000000);
	U(100663290uL, 0x4197ffffe8000000);
	U(100663291uL, 0x4197ffffec000000);
	U(100663292uL, 0x4197fffff0000000);
	U(201326586uL, 0x41a7fffff4000000);
	U(201326587uL, 0x41a7fffff6000000);
	U(201326588uL, 0x41a7fffff8000000);
	U(402653178uL, 0x41b7fffffa000000);
	U(402653179uL, 0x41b7fffffb000000);
	U(402653180uL, 0x41b7fffffc000000);
	U(805306362uL, 0x41c7fffffd000000);
	U(805306363uL, 0x41c7fffffd800000);
	U(805306364uL, 0x41c7fffffe000000);
	U(1610612730uL, 0x41d7fffffe800000);
	U(1610612731uL, 0x41d7fffffec00000);
	U(1610612732uL, 0x41d7ffffff000000);
	U(3221225466uL, 0x41e7ffffff400000);
	U(3221225467uL, 0x41e7ffffff600000);
	U(3221225468uL, 0x41e7ffffff800000);
	U(6442450938uL, 0x41f7ffffffa00000);
	U(6442450939uL, 0x41f7ffffffb00000);
	U(6442450940uL, 0x41f7ffffffc00000);
	U(12884901882uL, 0x4207ffffffd00000);
	U(12884901883uL, 0x4207ffffffd80000);
	U(12884901884uL, 0x4207ffffffe00000);
	U(25769803770uL, 0x4217ffffffe80000);
	U(25769803771uL, 0x4217ffffffec0000);
	U(25769803772uL, 0x4217fffffff00000);
	U(51539607546uL, 0x4227fffffff40000);
	U(51539607547uL, 0x4227fffffff60000);
	U(51539607548uL, 0x4227fffffff80000);
	U(103079215098uL, 0x4237fffffffa0000);
	U(103079215099uL, 0x4237fffffffb0000);
	U(103079215100uL, 0x4237fffffffc0000);
	U(206158430202uL, 0x4247fffffffd0000);
	U(206158430203uL, 0x4247fffffffd8000);
	U(206158430204uL, 0x4247fffffffe0000);
	U(412316860410uL, 0x4257fffffffe8000);
	U(412316860411uL, 0x4257fffffffec000);
	U(412316860412uL, 0x4257ffffffff0000);
	U(824633720826uL, 0x4267ffffffff4000);
	U(824633720827uL, 0x4267ffffffff6000);
	U(824633720828uL, 0x4267ffffffff8000);
	U(1649267441658uL, 0x4277ffffffffa000);
	U(1649267441659uL, 0x4277ffffffffb000);
	U(1649267441660uL, 0x4277ffffffffc000);
	U(3298534883322uL, 0x4287ffffffffd000);
	U(3298534883323uL, 0x4287ffffffffd800);
	U(3298534883324uL, 0x4287ffffffffe000);
	U(6597069766650uL, 0x4297ffffffffe800);
	U(6597069766651uL, 0x4297ffffffffec00);
	U(6597069766652uL, 0x4297fffffffff000);
	U(13194139533306uL, 0x42a7fffffffff400);
	U(13194139533307uL, 0x42a7fffffffff600);
	U(13194139533308uL, 0x42a7fffffffff800);
	U(26388279066618uL, 0x42b7fffffffffa00);
	U(26388279066619uL, 0x42b7fffffffffb00);
	U(26388279066620uL, 0x42b7fffffffffc00);
	U(52776558133242uL, 0x42c7fffffffffd00);
	U(52776558133243uL, 0x42c7fffffffffd80);
	U(52776558133244uL, 0x42c7fffffffffe00);
	U(105553116266490uL, 0x42d7fffffffffe80);
	U(105553116266491uL, 0x42d7fffffffffec0);
	U(105553116266492uL, 0x42d7ffffffffff00);
	U(211106232532986uL, 0x42e7ffffffffff40);
	U(211106232532987uL, 0x42e7ffffffffff60);
	U(211106232532988uL, 0x42e7ffffffffff80);
	U(422212465065978uL, 0x42f7ffffffffffa0);
	U(422212465065979uL, 0x42f7ffffffffffb0);
	U(422212465065980uL, 0x42f7ffffffffffc0);
	U(844424930131962uL, 0x4307ffffffffffd0);
	U(844424930131963uL, 0x4307ffffffffffd8);
	U(844424930131964uL, 0x4307ffffffffffe0);
	U(1688849860263930uL, 0x4317ffffffffffe8);
	U(1688849860263931uL, 0x4317ffffffffffec);
	U(1688849860263932uL, 0x4317fffffffffff0);
	U(3377699720527866uL, 0x4327fffffffffff4);
	U(3377699720527867uL, 0x4327fffffffffff6);
	U(3377699720527868uL, 0x4327fffffffffff8);
	U(6755399441055738uL, 0x4337fffffffffffa);
	U(6755399441055739uL, 0x4337fffffffffffb);
	U(6755399441055740uL, 0x4337fffffffffffc);
	U(13510798882111482uL, 0x4347fffffffffffd);
	N(13510798882111483uL);
	U(13510798882111484uL, 0x4347fffffffffffe);
	N(27021597764222970uL);
	N(27021597764222971uL);
	U(27021597764222972uL, 0x4357ffffffffffff);
	N(54043195528445946uL);
	N(54043195528445947uL);
	N(54043195528445948uL);
	N(108086391056891898uL);
	N(108086391056891899uL);
	N(108086391056891900uL);
	N(216172782113783802uL);
	N(216172782113783803uL);
	N(216172782113783804uL);
	N(432345564227567610uL);
	N(432345564227567611uL);
	N(432345564227567612uL);
	N(864691128455135226uL);
	N(864691128455135227uL);
	N(864691128455135228uL);
	N(1729382256910270458uL);
	N(1729382256910270459uL);
	N(1729382256910270460uL);
	N(3458764513820540922uL);
	N(3458764513820540923uL);
	N(3458764513820540924uL);
	N(6917529027641081850uL);
	N(6917529027641081851uL);
	N(6917529027641081852uL);
	N(13835058055282163706uL);
	N(13835058055282163707uL);
	N(13835058055282163708uL);
	N(9223372036854775802uL);
	N(9223372036854775803uL);
	N(9223372036854775804uL);
	N(18446744073709551610uL);
	N(18446744073709551611uL);
	N(18446744073709551612uL);

	U(6917529027641076736uL, 0x43d7fffffffffffb);
	U(6917529027641077760uL, 0x43d7fffffffffffc);
	U(13835058055282157568uL, 0x43e7fffffffffffd);
	N(13835058055282158592uL);
	U(13835058055282159616uL, 0x43e7fffffffffffe);
	U(9223372036854769664uL, 0x43dffffffffffffa);
	U(9223372036854770688uL, 0x43dffffffffffffb);
	U(9223372036854771712uL, 0x43dffffffffffffc);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
	U(18446744073709545472uL, 0x43effffffffffffd);
	N(18446744073709546496uL);
	U(18446744073709547520uL, 0x43effffffffffffe);
}
