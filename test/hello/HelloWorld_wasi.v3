// The main function is also the entrypoint of the module.
export "_start" def main() {
	def str = "Hello World!\n";
	def STDOUT = 1;
	fs_write(STDOUT, Pointer.atContents(str), str.length);
}

// Buffers and code to adapt to WASI filesystem API.
def iobuf = Array<byte>.new(16);
def retbuf = Array<byte>.new(16);

def fs_write(fd: int, data: Pointer, len: int) -> int {
	var p = Pointer.atContents(iobuf);
	(p + 0).store<int>(data - Pointer.NULL);
	(p + 4).store<int>(len);
	var sizeptr = Pointer.atContents(retbuf);
	var r = wasi_snapshot_preview1.fd_write(fd, p, 1, sizeptr);
	return if(r == 0, sizeptr.load<int>());
}

// Wasm import/export declarations for wasi_snapshot_preview
import component wasi_snapshot_preview1 {
	def fd_write(fd: i32, iovecptr: Pointer, length: i32, sizeptr: Pointer) -> i32;
}
