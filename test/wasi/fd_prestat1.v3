var buf = Array<int>.new(2);

def main() -> int {
	for (i = -1; i < 6; i++) {
		puti(i);
		puts(": ");
		var r = wasi_snapshot_preview1.fd_prestat_get(i, Pointer.atContents(buf));
		if (r != 0) {
			puts("fail: ");
			puti(r);
			puts(" ");
			errorCode(r);
		} else {
			puti(buf[0]);
			puts(" ");
			var len = buf[1];
			puti(len);

			var name = Array<byte>.new(len);
			for (i < name.length) name[i] = 'x';
			r = wasi_snapshot_preview1.fd_prestat_dir_name(i, Pointer.atContents(name), name.length);
			puts(" \"");
			puts(name);
			puts("\"");
		}
		puts("\n");
	}
	return 0;
}
def errorCode(r: int) {
	for (e in wasi_errno) {
		if (e.code == r) return puts(e.name);
	}
	puts("unknown");
}

def puts(str: string) {
	fs_write(Pointer.atContents(str), str.length);
}
def numbuf = Array<byte>.new(20);
def puti(i: int) {
	if (i == 0) return puts("0");
	var negative = true;
	if (i > 0) {
		negative = false;
		i = 0 - i;
	}
	var pos = numbuf.length;
	while (i != 0) { // XXX: use pointer loop instead?
		var digit = byte.!('0' - i % 10);
		numbuf[--pos] = digit;
		i = i / 10;
	}
	if (negative) numbuf[--pos] = '-';
	fs_write(Pointer.atContents(numbuf) + pos, numbuf.length - pos);
}
def iobuf = Array<byte>.new(16);
def retbuf = Array<byte>.new(16);
def fs_write(data: Pointer, len: int) -> int {
	var fd = 1;
	var p = Pointer.atContents(iobuf);
	(p + 0).store<int>(data - Pointer.NULL);
	(p + 4).store<int>(len);
	var sizeptr = Pointer.atContents(retbuf);
	var r = wasi_snapshot_preview1.fd_write(fd, p, 1, sizeptr);
	return if(r == 0, sizeptr.load<int>());
}
